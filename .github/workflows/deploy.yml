name: Deploy to VPS

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'kindlecast/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd kindlecast
        npm ci
        
    - name: Deploy to VPS
      env:
        VPS_HOST: 143.198.50.21
        VPS_USER: root
        VPS_PASSWORD: 22222WaminZ
        REMOTE_DIR: /var/www/kindlecast
      run: |
        # Install sshpass
        sudo apt-get update
        sudo apt-get install -y sshpass
        
        # Copy source code to VPS (excluding node_modules and build files)
        cd kindlecast
        sshpass -p "$VPS_PASSWORD" rsync -avz --delete \
          --exclude='node_modules' \
          --exclude='.next' \
          --exclude='.git' \
          --exclude='*.log' \
          --exclude='.DS_Store' \
          --exclude='.env*' \
          --exclude='coverage' \
          --exclude='out' \
          --exclude='build' \
          ./ "$VPS_USER@$VPS_HOST:$REMOTE_DIR/"
        
        # Install dependencies and restart on VPS
        sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no "$VPS_USER@$VPS_HOST" "
          cd $REMOTE_DIR
          
          # Install dependencies
          npm install
          
          # Stop existing processes
          pm2 delete kindlecast 2>/dev/null || true
          
          # Kill any process using port 3000
          lsof -ti:3000 | xargs kill -9 2>/dev/null || true
          sleep 2
          
          # Start dev server
          pm2 start 'npm run dev' --name kindlecast
          pm2 save
        "
        
    - name: Health Check
      env:
        VPS_HOST: 143.198.50.21
        VPS_USER: root
        VPS_PASSWORD: 22222WaminZ
      run: |
        sleep 5
        if sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no "$VPS_USER@$VPS_HOST" "curl -f http://localhost:3000 > /dev/null 2>&1"; then
          echo "✅ Deployment successful! KindleCast is running."
        else
          echo "❌ Health check failed. Showing logs..."
          sshpass -p "$VPS_PASSWORD" ssh -o StrictHostKeyChecking=no "$VPS_USER@$VPS_HOST" "pm2 logs kindlecast --lines 20"
          exit 1
        fi
